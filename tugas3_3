async function cekNaN(param) {
  let myPromise = new Promise(function (Resolve, Reject) {
    let result = isNaN(param);

    // The producing code (this may take some time)

    if (result) {
      Resolve("ini adalah NaN");
    } else {
      Reject("Error: bukan NaN");
    }
  });
  let nilai = await myPromise;
  console.log(nilai);
}

cekNaN(NaN);

//otherway
const cekNaN = (param) => {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      let result = isNaN(param);
      if (result) {
        resolve(`NaN`);
      } else {
        reject(new Error("bukan NaN"));
      }
    }, 3000);
  });
};

cekNaN(NaN)
  .then((response) => console.log(response))
  .catch((response) => console.log(response));
  
  program 2
  
  const cekNilai = (value1, value2, value3, value4) => {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      let average = (value1 + value2 + value3 + value4) / 4;
      if (average >= 80) {
        resolve(`lulus`);
      } else {
        reject(new Error("tidak lulus"));
      }
    }, 3000);
  });
};

// cekNilai(90, 80, 70, 85)
//   .then((response) => console.log(response))
//   .catch((response) => console.log(response));

async function cek(value1, value2, value3, value4) {
  try {
    const nilai = await cekNilai(value1, value2, value3, value4);
    console.log(`lulus`);
  } catch (error) {
    console.log(error);
  }
}
cek(90, 80, 70, 85);
